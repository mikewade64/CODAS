openapi: 3.0.0
info:
  version: "3.0" # 05/05/2021
  title: 'Codas Public'
  description: 'An API that provides Public/Third Party access to customer specific information such as pricing and transactional data for registered Codas Online customers. Provides access to reference data and ability to update customer details and create new sales orders. This API requires a valid CDS CODAS license.  
<br>
<br>Version 2.0  - 05/08/2019  - Initial documentation creation
<br>Version 3.0  - 05/05/2021 - Add third party endpoints'
  termsOfService: https://www.codas.com/privacy-policy
  contact:
    name: Support
    url: https://support.codas.co.uk
    email: support@cds-systems.co.uk
  license:
    name: CDS Computer Design Systems Ltd.
    url: https://www.codas.com
# -------------------------------------------------------- #
# API SERVERS
# -------------------------------------------------------- # 
servers: 
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/codas7/CODAS7_PublicAPI/1
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/codas7/Codas7a/1
- url: https://sandbox.dev.codas.com/api/v1
  description: Sandbox API Server
# -------------------------------------------------------- #   
# RESOURCE ENDPOINTS
# -------------------------------------------------------- #    
paths:
# -------------------------------------------------------- #   
# SALES ORDER ENDPOINTS
# -------------------------------------------------------- #     
  /sales-orders/:
    get:
      tags:
        - Sales Orders
      operationId: GetCustomerOrders
      parameters:
        - name: accountNo
          in: query
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: after
          in: query
          required: false
          description: Returns orders sequentially after this UID
          example: '0000001720'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Set maximum number of orders returned
          example: '10'
          schema:
            type: number
      description: Get a customer's orders
      responses:
        "200":
          $ref: "#/components/responses/SalesOrders"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
        "501":
          description: Not Implemented
      security:
        - OAuth2:
            - codasapi.sales_order.read
  # -------------------------------------------------------- #    
  /sales-orders/{uid}:
    get:
      tags:
        - Sales Orders
      operationId: GetSpecificOrders
      parameters:
        - name: uid
          in: path
          required: true
          description: Unique Order ID or Ticket Number
          example: '0000001507'
          schema:
            type: string
            maxLength: 20
        - name: accountNo
          in: query
          required: false
          description: Customer Account Number, only required if uid is a Ticket Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
      description: Get Order
      responses:
        "200":
          $ref: "#/components/responses/SalesOrder"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
      security:
        - OAuth2:
            - codasapi.sales_order.read
# -------------------------------------------------------- #   
# CUSTOMER ENDPOINTS
# -------------------------------------------------------- #
  /customers/{accountNo}:
    get:
      tags:
        - Customers
      operationId: GetCustomer
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer account number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: Access-Key
          in: header
          required: false
          description: Access token
          example: 'cQDIgUJZiNQWmvAOCRHbnQyIxXihryLg2S/NQcucOr0='
          schema:
            type: string
        - name: include
          in: query
          required: false
          description: Comma-delimited list of additional fields to include in the response
          example: 'MarketGroup1'
          schema:
            type: string
      description: Get Codas customer details.<br><br>When using a client credentials OAuth2 token, the Access-Key is required.
      responses:
        "200":
          $ref: "#/components/responses/Customer"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
      security:
        - OAuth2:
            - codasapi.customer.read
    patch:
      tags:
        - Customers
      operationId: PatchCustomer
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer account number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: Access-Key
          in: header
          required: false
          description: Customer access token
          example: 'cQDIgUJZiNQWmvAOCRHbnQyIxXihryLg2S/NQcucOr0='
          schema:
            type: string
        - name: include
          in: query
          required: false
          description: Comma-delimited list of additional fields to include in the response
          example: 'MarketGroup1'
          schema:
            type: string
      description: Update Codas customer details.<br><br>When using a client credentials OAuth2 token, the Access-Key is required.
      requestBody:
        $ref: "#/components/requestBodies/CustomerPatchBody"
      responses:
        "200":
          $ref: "#/components/responses/Customer"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
      security:
        - OAuth2:
            - codasapi.customer.update
    put:
      tags:
        - Customers
      operationId: PutCustomer
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer account number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: Access-Key
          in: header
          required: false
          description: Customer access token
          example: 'cQDIgUJZiNQWmvAOCRHbnQyIxXihryLg2S/NQcucOr0='
          schema:
            type: string
      description: Update Codas customer.
      requestBody:
        $ref: "#/components/requestBodies/CustomerPost"
      responses:
        "200":
          $ref: "#/components/responses/Customer"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorised
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
      security:
        - OAuth2:
            - codasapi.customer.update
  /customers/{accountNo}/authenticate-personal-details:
    post:
      tags:
      - Customers
      operationId: AuthenticateCustomerPersonalDetails
      description: Exchange customer personal details for an access token
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer account number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
      requestBody:
        $ref: "#/components/requestBodies/CustomerPersonalDetailsBody"
      responses:
        "200":
          $ref: "#/components/responses/CustomerPersonalDetailsResponse"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorised
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
      security:
        - OAuth2:
            - codasapi.customer.authenticate
# -------------------------------------------------------- #
# CONTACT ENDPOINTS
# -------------------------------------------------------- #
  /customers/{accountNo}/contacts/:
    get:
      tags:
        - Contacts
      operationId: GetAllContacts
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: limit
          in: query
          description: Limit number of records returned
          example: 10
          schema:
            type: number
        - name: after
          in: query
          description: UID to start after for next batch
          example: '00000'
          schema:
            type: string
            minLength: 5
            maxLength: 5
      description: Get Codas Online customer contacts
      responses:
        "200":
          $ref: "#/components/responses/Contacts"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
      security:
        - OAuth2:
            - codasapi.contact.read
# ------------------------------------------------------ #    
  /customers/{accountNo}/contacts/{uid}:
    get:
      tags:
        - Contacts
      operationId: GetSpecificContacts
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: uid
          in: path
          required: true
          description: Contact Unique ID (within Customer)
          example: '00000'
          schema:
            type: string
            minLength: 5
            maxLength: 5
      description: Get the Codas Online customer contact
      responses:
        "200":
          $ref: "#/components/responses/Contact"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
      security:
        - OAuth2:
            - codasapi.contact.read
# -------------------------------------------------------- #
# SALES PAYMENTS ENDPOINTS
# -------------------------------------------------------- #
  /sales-payments:
    post:
      tags:
        - Sales Payments
      operationId: CreateSalesPayment
      parameters:
        - name: Access-Key
          in: header
          required: false
          description: Access token
          example: 'cQDIgUJZiNQWmvAOCRHbnQyIxXihryLg2S/NQcucOr0='
          schema:
            type: string
      description: Create a sales payment.<br><br>When using a client credentials OAuth2 token, the Access-Key is required.
      requestBody:
        $ref: "#/components/requestBodies/SalesPaymentRestrictedBody"
      responses:
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          $ref: "#/components/responses/Forbidden"
      security:
        - OAuth2:
            - codasapi.sales_payment.create
# -------------------------------------------------------- #
# THIRD PARTY ENDPOINTS
# -------------------------------------------------------- #
  /third-party/customers:
    post:
      tags:
        - Third Party Interface
      operationId: PostThirdPartyCustomer
      description: Create/Update CODAS customer via third party interface.
      requestBody:
        $ref: "#/components/requestBodies/ThirdPartyCustomer"
      responses:
        "200":
          $ref: "#/components/responses/Customer"
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
      security:
        - OAuth2:
            - codasapi.customer.create
            - codasapi.customer.read
  /third-party/sales-orders:
    post:
      tags:
        - Third Party Interface
      operationId: PostOrder
      description: Create a CODAS sales order via third party interface.
      requestBody:
        $ref: "#/components/requestBodies/ThirdPartySalesOrder"
      responses:
        "201":
          $ref: "#/components/responses/Created"
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorised
      security:
        - OAuth2:
            - codasapi.sales_order.create
            - codasapi.sales_order.read
  /third-party/sales-orders/{uid}:
    patch:
      tags:
        - Third Party Interface
      operationId: PatchOrder
      parameters:
        - name: uid
          in: path
          required: true
          description: Order UID
          example: '0000100100'
          schema:
            type: string
            minLength: 10
            maxLength: 20
        - name: tpguid
          in: query
          required: true
          description: TP Order GUID
          example: 'E4210C10-04CA-4757-A7BF-69BFC3541B28'
          schema:
            type: string
      description: Update Codas order details. The GUID provided when making the order is required. Operations supported are Add and Replace.
      requestBody:
        $ref: "#/components/requestBodies/OrderPatchBody"
      responses:
        "204":
          description: No Content
        "400":
          $ref: "#/components/responses/BadRequest"
        "401":
          description: Unauthorised
        "403":
          $ref: "#/components/responses/Forbidden"
        "404":
          description: Not Found
      security:
        - OAuth2:
            - codasapi.sales_order.update
# -------------------------------------------------------- #   
# SCHEMAS
# -------------------------------------------------------- #    
components:
  schemas:
    SalesOrder:
      title: Sales Order
      type: object
      properties:   
        UID:
          type: string
          description: UID - Unique Order ID (ignored in Post)
          example: '0000001507'
          maxLength: 10
        TicketNo:
          type: string
          description: Ticket number (ignored in Post)
          example: 'T0056443'
          maxLength: 20
        CustomerAccountNo:
          type: string
          description: Customer Account Number
          example: '1234567'
          minLength: 7
          maxLength: 7
        InvoiceNo: 
          type: string
          description: Invoice Number (ignored in Post)
          example: 'T123456'
          maxLength: 20
        OrderDate:
          type: string
          description: Order date (YYYY-MM-DD)
          example: '2019-07-22'
          maxLength: 10
        IntendedDeliveryDate:
          type: string
          description: Earliest delivery date (YYYY-MM-DD or null)
          example: '2019-07-24'
          maxLength: 10
        LatestDeliveryDate:
          type: string
          description: Latest delivery date (YYYY-MM-DD or null)
          example: '2019-07-27'
          maxLength: 10
        DeliveryDate:
          type: string
          description: Actual delivery date (YYYY-MM-DD or null), only applicable when Status is greater than 9 and less than 90
          example: '2019-07-27'
          maxLength: 10
        EstArrDate:
          type: string
          description: Estimated delivery date (YYYY-MM-DD or null), only applicable when WindowsLoad is populated
          example: '2019-07-27'
          maxLength: 10
        OrderDepot:
          type: string
          description: Order depot
          example: '100'
          maxLength: 3
        AddressLine1:
          type: string
          description: Delivery address line 1
          example: ''
          maxLength: 50
        AddressLine2:
          type: string
          description: Delivery address line 2
          example: ''
          maxLength: 50
        AddressLine3:
          type: string
          description: Delivery address line 3
          example: ''
          maxLength: 50
        AddressLine4:
          type: string
          description: Delivery address line 4
          example: ''
          maxLength: 50
        AddressPostcode:
          type: string
          description: Delivery address postcode
          example: ''
          maxLength: 10
        DeliveryInstructions:
          type: string
          description: Delivery instructions
          maxLength: 40
        SpecialDeliveryInstructionsLine1:
          type: string
          description: Special delivery instructions line 1
          maxLength: 100
        SpecialDeliveryInstructionsLine2:
          type: string
          description: Special delivery instructions line 2
          maxLength: 100
        SpecialDeliveryInstructionsLine3:
          type: string
          description: Special delivery instructions line 3
          maxLength: 100
        SpecialDeliveryInstructionsLine4:
          type: string
          description: Special delivery instructions line 4
          maxLength: 100
        DeliveryTime:
          type: string
          description: Agreed delivery time
          example: '15:30:54'
          maxLength: 8
          nullable: true
        TotValIncVAT:
          type: number
          description: Order total value including VAT
          example: 23490
        Status:
          type: integer
          description: Status (ignored in Post)
          example: 10
        StatusDescription:
          type: string
          description: Status Description (ignored in Post)
          example: 'Confirmed'
        WindowsLoad:
          type: string
          description: Load row id. Empty string unless the order is on a load
          example: '0000001234'
          maxLength: 10
        OrderLines:  
          type: array
          description: Array of order lines
          items:
            $ref: '#/components/schemas/SalesOrderLine'          
        DeliveryLines:  
          type: array
          description: Array of delivery lines (only applicable when the status is greater than 9)
          items:
            $ref: '#/components/schemas/SalesOrderLine'
# -------------------------------------------------------- #  
    ThirdPartySalesOrder:
      title: Third Party Sales Order
      type: object
      properties:   
        ThirdPartyInterface:
          type: array
          description: Array of third party interfaces associated with the customer
          items:
            $ref: '#/components/schemas/ThirdPartyInterfacePost'
        AddressLine1:
          type: string
          description: Delivery address line 1
          example: ''
          maxLength: 50
        AddressLine2:
          type: string
          description: Delivery address line 2
          example: ''
          maxLength: 50
        AddressLine3:
          type: string
          description: Delivery address line 3
          example: ''
          maxLength: 50
        AddressLine4:
          type: string
          description: Delivery address line 4
          example: ''
          maxLength: 50
        AddressPostcode:
          type: string
          description: Delivery address postcode
          example: ''
          maxLength: 10
        DeliveryInstructions:
          type: string
          description: Delivery instructions
          maxLength: 40
        SpecialDeliveryInstructionsLine1:
          type: string
          description: Special delivery instructions line 1
          maxLength: 100
        SpecialDeliveryInstructionsLine2:
          type: string
          description: Special delivery instructions line 2
          maxLength: 100
        SpecialDeliveryInstructionsLine3:
          type: string
          description: Special delivery instructions line 3
          maxLength: 100
        SpecialDeliveryInstructionsLine4:
          type: string
          description: Special delivery instructions line 4
          maxLength: 100
        CustomerOrderNumber:
          type: string
          description: Customer order number
          example: ''
          maxLength: 30
        MaximumVehicleType:
          type: string
          description: Maximum vehicle type
          example: '0'
          maxLength: 10
        IntendedDeliveryDate:
          type: string
          description: Earliest delivery date (YYYY-MM-DD or null)
          example: '2019-07-24'
          maxLength: 10
        LatestDeliveryDate:
          type: string
          description: Latest delivery date (YYYY-MM-DD or null)
          example: '2019-07-27'
          maxLength: 10
        OrderDepot:
          type: string
          description: Order depot
          example: '100'
          maxLength: 3
        DayTimeWindow:
          type: array
          description: Array of days and times
          items:
            $ref: '#/components/schemas/DayTimeWindow'
        UseStatement:
          type: array
          description: Array of use statements
          items:
            $ref: '#/components/schemas/UseStatement'
        OrderPayment:
          type: array
          description: Array of order payments
          items:
            $ref: '#/components/schemas/OrderPayment'
        OrderLines:  
          type: array
          description: Array of order lines
          items:
            $ref: '#/components/schemas/ThirdPartySalesOrderLine'
# -------------------------------------------------------- #    
    SalesOrderLine:
      title: Sales Order Line
      type: object
      properties: 
        Line:
          type: integer
          description: Line - Unique within Order
          example: 1
          maxLength: 5
        ProductCode:
          type: string
          description: Product code
          example: '001'
          maxLength: 10
        Quantity:
          type: number
          description: Quantity
          example: 1000
          maxLength: 8
        EnteredUnit:
          type: string
          description: Unit of Measure 'E' = Each,'K' = Kgs,'L' = Ambient Litres,'L15' = Litres 15,'T' = Tonnes
          example: 'L'
          maxLength: 3
        UnitPrice:
          type: number
          description: Unit price
          example: 100.00
          maxLength: 8
        VATRate:
          type: string
          description: VAT rate
          example: "20%"
          maxLength: 4
        VATAmount:
          type: number
          description: VAT amount
          example: 20000
        Val:
          type: number
          description: Value
          example: 120000
# -------------------------------------------------------- #
    ThirdPartySalesOrderLine:
      title: Third Party Sales Order Line
      type: object
      properties: 
        ProductCode:
          type: string
          description: Product code
          example: '001'
          maxLength: 10
        Quantity:
          type: number
          description: Quantity
          example: 1000
          maxLength: 8
        UnitPrice:
          type: number
          description: Unit price
          example: 100.00
          maxLength: 8
        VATRate:
          type: string
          description: VAT rate
          example: "5.00"
          maxLength: 4
# -------------------------------------------------------- #
    DayTimeWindow:
      title: Day Time Window
      type: object
      properties: 
        Day:
          type: string
          description: Day
          example: 'MONDAY'
        TimeWindow:
          type: array
          description: Times
          items:
            $ref: "#/components/schemas/TimeWindow"
# -------------------------------------------------------- #
    TimeWindow:
      title: Time Window
      type: object
      properties:
        From:
          type: string
          description: From
          example: '9:00'
        To:
          type: string
          description: To
          example: '13:00'
# -------------------------------------------------------- #
    UseStatement:
      title: Use Statement
      type: object
      properties: 
        ProductCode:
          type: string
          description: Product code
          example: '001'
          maxLength: 10
        GivenBy:
          type: string
          description: Given by
          example: 'Mrs Miggins'
          maxLength: 50
        StatedUse:
          type: string
          description: Stated use
          example: 'D'
          maxLength: 3
# -------------------------------------------------------- #
    OrderPayment:
      title: Order Payment. Please note that card payments are only allowed when the Codas system is configured to use Realex
      type: object
      properties: 
        Amount:
          type: number
          description: Amount
          example: 19812
          maxLength: 10
        Type:
          type: string
          description: Payment type - must exist in the Sales Ledger Credit Types table
          example: 'CSH'
          maxLength: 5
        SubType:
          type: string
          description: Payment sub type - only required for card payments
          example: 'CSH'
          maxLength: 5
        Ref:
          description: Payment reference
          type: string
          example: 'P123456'
          maxLength: 20
        CardType:
          description: Card payment type, must exist in the PaymentCard table - only required for card payments
          type: string
          example: 'VISA'
        CardNumber:
          description: The last 4 digits of the payment card number - only required for card payments
          type: number
          example: 1234
          maxLength: 4
        CardExpiryDate:
          description: Card payment expiry date - only required for card payments
          type: string
          example: '10/2024'
          maxLength: 7
        CardSystem:
          description: System used for processing the transaction - only required for card payments
          type: string
          example: 'PAYANDSHOP'
          maxLength: 20
        CardSystemAccount:
          description: System account - only required for card payments
          type: string
          example: 'account'
          maxLength: 20
        CardSystemRef:
          description: Reference generated by processing system - only required for card payments
          type: string
          example: '45434563445634545634'
          maxLength: 20
        CardAuthCode:
          description: Authorisation code - only required for card payments
          type: string
          example: '12345'
          maxLength: 30
        CardTransType:
          description: Card transaction type - only required for card payments
          type: string
          example: 'A'
          maxLength: 2
          enum:
            - A
        CardTransRef:
          description: Card transaction reference - only required for card payments
          example: 'GDFG34563456FG5343'
          maxLength: 50
        CardSettle:
          description: Whether or not the payment is settled - only required for card payments
          example: 'Y'
          maxLength: 1
          enum:
            - Y
            - N
        CardCurrency:
          description: Card transaction currency - only required for card payments
          example: 'GBP'
          maxLength: 10
# -------------------------------------------------------- #
    SalesOrders:
        title: Sales Order List
        type: object
        properties:
          Items:
            type: array
            items:
              $ref: "#/components/schemas/SalesOrder"
          Next:
            $ref: "#/components/schemas/Next"
            description: Link to next batch of sales orders
# -------------------------------------------------------- #
    Next:
      title: Next
      type: string
      format: uri
      example: "/api/v1/some-endpoint/?param1=1234567&after=00000&limit=10"
# -------------------------------------------------------- #    
    MarketingPreference:
      title: Marketing Preference
      type: object
      properties:
        UID:
          type: number
          description: Unique ID
        Type:
          type: string
          maxLength: 15
          example: "EMAIL"
        Preference:
          type: string
          minLength: 1
          maxLength: 1
          enum:
            - A
            - D
            - S
            - U
          example: "A"
        Reason:
          type: string
          maxLength: 10
        CreatedOn:
          type: string
          anyOf: 
            - type: string
              format: date-time
            - type: string
              maxLength: 0
          readOnly: true
          example: "2019-10-09T17:07:30"
        TelesalesPref:
          type: string
          minLength: 0
          maxLength: 1
          enum:
            - A
            - D
            - S
            - U
            - 
 # -------------------------------------------------------- #
    Contact:
      title: Contact
      type: object
      properties:
        AccountNo:
          type: string
          description: Customer Account Number
          minLength: 7
          maxLength: 7
          example: '0001234'          
        UID:
          type: string
          description: Contact Unique ID (within Customer)
          minLength: 5
          maxLength: 5
          example: '00000'
        FullName:
          type: string
          description: Associate Full Name
          example: 'Mr Joe T Bloggs'
          maxLength: 80
        Title:
          type: string
          description: Associate Title
          example: 'Mr'
          maxLength: 10
        Forename:
          type: string
          description: Associate Forename
          example: 'Joe'
          maxLength: 20          
        Initials:
          type: string
          description: Associate Initials
          example: 'T'
          maxLength: 10
        Surname:
          type: string
          description: Associate Surname
          example: 'Bloggs'
          maxLength: 30 
        AddressToUse:
          type: string
          description: Which customer address to use for associate - (N)ormal, (I)nvoice or (S)pecified
          example: 'N'
          maxLength: 1
        SpecAddress1:
          type: string
          description: Associate Specified Address Line 1
          example: 'The Mill'
          maxLength: 30
        SpecAddress2:
          type: string
          description: Associate Specified Address Line 2
          example: 'South Hall Street'
          maxLength: 30
        SpecAddress3:
          type: string
          description: Associate Specified Address Line 3
          example: 'Salford'
          maxLength: 30
        SpecAddress4:
          type: string
          description: Associate Specified Address Line 4
          example: 'Lancashire'
          maxLength: 30
        SpecPostCode:
          type: string
          description: Associate Specified Address Postcode
          example: 'M5 4TP'
          maxLength: 30
        SpecCountry:
          type: string
          description: Associate Specified Address Country
          example: 'UK'
          maxLength: 3  
        MarketingPreferences:
          type: array
          items:
            $ref: "#/components/schemas/MarketingPreference"
        EMail:
          type: string
          description: Associate Email Address
          format: email
          maxLength: 60
          example: 'customer@domain.com'
        TelNo: 
          type: string
          description: Associate Telephone Number
          maxLength: 20
          example: '01618329251'
        TelNo2: 
          type: string
          description: Second Associate Telephone Number
          maxLength: 20
          example: '01618329251'
        MobileNo:
          type: string
          description: Associate Mobile Number
          minLength: 40
          example: '07775743400'
        OnlineSvcUserName:
          type: string
          description: Online Login User Name
          maxLength: 60
          example: 'customer@domain.com'
        OnlineSvcActive:
          type: string
          description: Online Login Active ([Y]es / [N]o / [P]ending delete)
          minLength: 1
          maxLength: 1
          example: 'Y'
# -------------------------------------------------------- #    
    Contacts:
        title: Contacts List
        type: object
        properties:
          Items:
            type: array
            items:
              $ref: "#/components/schemas/Contact"
          Next:
            $ref: "#/components/schemas/Next"
            description: Link to next batch of contacts
# -------------------------------------------------------- #
    Customer:
      title: Customer
      type: object
      properties:
        AccManager:
          type: string
          maxLength: 3
          example: '001'
        AccountNo:
          type: string
          description: Customer account number
          minLength: 7
          maxLength: 7
          example: '0001234'
        AccountType:
          type: string
          maxLength: 1
          example: '0'
        Address1:
          type: string
          description: Address line 1
          maxLength: 50
        Address2:
          type: string
          description: Address line 2
          maxLength: 50
        Address3:
          type: string
          description: Address line 3
          maxLength: 50
        Address4:
          type: string
          description: Address line 4
          maxLength: 50
        Balance:
          type: number
          description: Total outstanding balance (pence)
          example: 100000
        Brand:
          type: string
          maxLength: 1
          example: '1'
        Company:
          type: string
          maxLength: 1
          example: '1'
        Country:
          type: string
          maxLength: 3
          example: 'UK'
        CreditLimit:
          type: number
          description: Credit limit
          example: 100000
        Depot:
          type: string
          description: Depot code
          example: 'DOM'
          maxLength: 3
        MarketCode:
          type: string
          description: Market code
          example: 'DOM'
          maxLength: 3
        MarketGroup1:
          type: string
          description: Market group
          example: 'GRP14'
          maxLength: 5
        Name:
          type: string
          description: Full name
          maxLength: 40
        PostalCode:
          type: string
          description: Postal code
          maxLength: 5
        PrefCommLett:
          type: string
          description: Preferred method of communication for letters
          example: 'EMAIL'
          maxLength: 10
          enum:
            - POST
            - EMAIL
            - POST,EMAIL
        PrefCommInv:
          type: string
          description: Preferred method of communication for invoices
          example: 'POST'
          maxLength: 10
          enum:
            - POST
            - EMAIL
            - POST,EMAIL
        PrefCommStmt:
          type: string
          description: Preferred method of communication for statements
          example: 'EMAIL,POST'
          maxLength: 10
          enum:
            - POST
            - EMAIL
            - POST,EMAIL
        SalesRep:
          type: string
          description: Sales rep
          example: '001'
          maxLength: 3
        StatementFlag:
          type: string
          description: Statement flag
          example: 'O'
          maxLength: 1
        VATNumber:
          type: string
          description: VAT number
          example: 'GB999999999'
        RDCONumber:
          type: string
          description: RDCO number
          example: '90909090'
# -------------------------------------------------------- #
    ThirdPartyCustomer:
      title: Third Party Customer
      type: object
      properties:
        ThirdPartyInterface:
          type: array
          description: Array of third party interfaces associated with the customer
          items:
            $ref: '#/components/schemas/ThirdPartyInterfacePost'
        Name:
          type: string
          description: Full name
          maxLength: 40
        Address1:
          type: string
          description: Address line 1
          maxLength: 50
        Address2:
          type: string
          description: Address line 2
          maxLength: 50
        Address3:
          type: string
          description: Address line 3
          maxLength: 50
        Address4:
          type: string
          description: Address line 4
          maxLength: 50
        MarketCode:
          type: string
          description: Market code
          example: 'DOM'
          maxLength: 3
        PostalCode:
          type: string
          description: Postal code
          maxLength: 5
        VATNumber:
          type: string
          description: VAT number
          example: 'GB999999999'
        RDCONumber:
          type: string
          description: RDCO number
          example: '90909090'
          maxLength: 20
        CustomerAssociate:
          type: array
          description: Customer Main Contact
          items:
            $ref: '#/components/schemas/CustomerPersonalDetailsPost'
# -------------------------------------------------------- #
    CustomerPersonalDetailsPost:
      title: Customer Personal Details Post
      type: object
      properties:
        Title:
          type: string
          description: Title
          maxLength: 10
        Forename:
          type: string
          description: Forename
          maxLength: 20
        Surname:
          type: string
          description: Surname
          maxLength: 30
        TelNo:
          type: string
          description: Telephone number
          example: '07777 444888'
          maxLength: 20
        MobileNo:
          type: string
          description: Mobile number
          example: '07777 444888'
          maxLength: 40
        EMail:
          type: string
          description: E-mail address
          example: 'noemail@cds-systems.co.uk'
          maxLength: 60
        Categories:
          type: string
          description: Categories
          example: 'MAIN,EMAILDELIVNOTIFY,EMAILOCNOTIFY'
        WorkflowContactMethod:
          description: Workflow contact method codes
          type: string
          example: 'S'
          maxLength: 20
          enum:
            - C
            - C,E
            - C,S
            - C,SE
            - E
            - S
            - SE
# -------------------------------------------------------- #
    CustomerPersonalDetails:
      title: Customer Personal Details
      type: object
      properties:
        TelNo:
          type: string
          description: Telephone number
          example: '07777 444888'
          maxLength: 20
        EmailAddress:
          type: string
          description: E-mail address
          example: 'noemail@cds-systems.co.uk'
          maxLength: 60
        PostalCode:
          description: Postal Code
          type: string
          example: 'M5 4TP'
          maxLength: 9
# -------------------------------------------------------- #
    ThirdPartyInterface:
      title: Third Party Interfaces
      type: object
      properties:
        Sequence:
          description: Third party interface sequence no.
          type: integer
          example: 1
        AccountNo:
          description: Customer account number
          minLength: 7
          maxLength: 7
          example: '0001234'
        Interface:
          description: Third party interface Code
          type: string
          example: 'THIRDPARTY'
          maxLength: 10
        ThirdPartyRef:
          description: Third party reference
          type: string
          maxLength: 30
# -------------------------------------------------------- #
    ThirdPartyInterfacePost:
      title: Third Party Interfaces Post
      type: object
      properties:
        Interface:
          description: Third party interface Code
          type: string
          example: 'THIRDPARTY'
          maxLength: 10
        ThirdPartyRef:
          description: Third party reference
          type: string
          maxLength: 30
# -------------------------------------------------------- #
    SalesPaymentRestricted:
      title: Sales Payment Restricted
      type: object
      properties:
        AccountNo:
          type: string
          description: Account number
          example: '0001234'
          maxLength: 7
          minLength: 7
        PaymentType:
          type: string
          description: Payment type - must exist in the Sales Ledger Credit Types table
          example: 'CSH'
          maxLength: 5
        PaymentDate:
          description: Payment date (yyyy-mm-dd)
          type: string
          example: '2020-10-17'
          maxLength: 10
        PaymentValue:
          description: Payment value
          type: number
          example: 19812
        PaymentReference:
          description: Payment value
          type: string
          example: 'P123456'
          maxLength: 20
        HowCreated:
          description: How created value
          type: string
          example: 'ONLINE'
          maxLength: 20
        PaymentLines:
          type: array
          description: Array of payment lines (only applicable if allocating payment to existing debits)
          items:
            $ref: '#/components/schemas/SalesPaymentLineRestricted'
# -------------------------------------------------------- #
    SalesPaymentLineRestricted:
      title: Sales Payment Line Restricted
      type: object
      properties:
        Value:
          description: Line value
          type: number
          example: 19812
        TransReference:
          description: Transaction reference
          type: string
          example: 'T729861'
          maxLength: 20
# -------------------------------------------------------- #
    PatchDocument:
      title: Patch Document
      type: array
      items:
        type: object
        required:
         - "op"
         - "path"
         - "value"
        properties: 
         op: 
          type: string 
          description: The operation to be performed 
          enum:
           - "replace"
         path: 
          type: string 
          description: Field name pointer
          example: /FieldName
         value: 
          type: object 
          description: Field value
          example: "Field value"
# -------------------------------------------------------- #
    Status:
      title: Status
      type: object
      description: Status object describing issues with the request
      properties:
        Errors:
          type: array
          items:
            $ref: "#/components/schemas/Error"
        Warnings:
          type: array
          items:
            $ref: "#/components/schemas/Warning"
# -------------------------------------------------------# 
    Error:
      title: Error
      type: object
      description: An error object
      properties:
        Code:
          type: string
          description: Error code
        Name:
          type: string
          description: Error name
        Message:
          type: string
          description: Error message
# -------------------------------------------------------# 
    Warning:
      title: Warning
      type: object
      description: An warning object
      properties:
        Code:
          type: string
          description: Warning code
        Name:
          type: string
          description: Warning name
        Message:
          type: string
          description: Warning message
# -------------------------------------------------------- #
# RESPONSES
# -------------------------------------------------------- #
  responses:
    UnauthorisedError:
      description: Access token is missing or invalid
    UnprocessableError:
      description: Unprocessable Entity
    Created:
      description: Created
      headers:
            Location:
              schema:
                type: string
                format: uri
                example: /artifacts/10
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Status"        
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Status"
# -------------------------------------------------------- #        
    SalesOrder:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesOrder"
# -------------------------------------------------------- #        
    SalesOrders:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesOrders"
 # -------------------------------------------------------- #   
    LastOrder:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesOrder"
# -------------------------------------------------------- #    
    Contact:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Contact"
# -------------------------------------------------------- #    
    Contacts:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Contacts"
# -------------------------------------------------------- #    
    Customer:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Customer"
# -------------------------------------------------------- #      
    CustomerPersonalDetailsResponse:
      description: Success
      content:
        application/json:
          schema:
            description: Success
            properties:
              access_key:
                type: string
                description: Unique access key for customer
                example: "cQDIgUJZiNQWmvAOCRHbnQyIxXihryLg2S/NQcucOr0="
              expires:
                type: number
                description: Expiration time (Unix epoch)
                example: 1602944485
# -------------------------------------------------------- # 
# SECURITY
# -------------------------------------------------------- #    
  securitySchemes:
    OAuth2:           
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://identity.example.com/connect/authorize
          tokenUrl: https://identity.example.com/connect/token
          scopes:
            codasapi.sales_order.read: Grants read access to sales orders, only their own by default
            #------#
            codasapi.contact.read: Grants read access to customer further contacts, only their own by default
            #------#
            codasapi.customer.read: Grants read access to customers
            codasapi.customer.update: Grants update access to customers
            codasapi.customer.authenticate: Grants update access to customer personal details authentication
            #------#
            codasapi.sales_payment.create: Grants creation access for sales payments
        clientCredentials:
          tokenUrl: https://identity.example.com/connect/token
          scopes:
            codasapi.sales_order.read: Grants read access to sales orders, only their own by default
            #------#
            codasapi.contact.read: Grants read access to customer further contacts, only their own by default
            #------#
            codasapi.customer.read: Grants read access to customers
            codasapi.customer.update: Grants update access to customers
            #------#
            codasapi.sales_payment.create: Grants creation access for sales payments
# -------------------------------------------------------- #    
# REQUEST BODIES
# -------------------------------------------------------- #    
  requestBodies:  
    ContactBody:
      description: An object containing Contact update details 
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/Contact"
          examples:
            default:
              summary: Example 1
              value: |
                {
                  "Name": {
                    "casTitle": "Mr",
                    "casForename": "Joe",
                    "casInitials": "T",
                    "casSurname": "Bloggs"
                  },
                  "Address": {
                    "casAddress4": "Lancashire",
                  },
                  "Marketing": {
                    "casGDPRMailUs": "D",
                  },
                  "casEMail": "joe@bloggs.com",
                  "casMobileNo": "07775123456",
                  }
                }
# -------------------------------------------------------- #   
    SalesOrderBody:
      description: Success
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/SalesOrder"
# -------------------------------------------------------- #   
    ThirdPartySalesOrder:
      description: Success
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/ThirdPartySalesOrder"
# -------------------------------------------------------- #   
    Customer:
      description: An object containing customer details
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Customer"
# -------------------------------------------------------- #
    ThirdPartyCustomer:
      description: An object containing third party customer details
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ThirdPartyCustomer"
# -------------------------------------------------------- #   
    CustomerPost:
      description: An object containing customer details
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Customer"
# -------------------------------------------------------- #   
    CustomerPatchBody:
      description: An object containing customer update details
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/PatchDocument"
          examples:
            default:
              summary: Example 1
              value: |
                [
                  { "op": "replace", "path": "/PrefCommLett", "value": "EMAIL" },
                  { "op": "replace", "path": "/PrefCommInv", "value": "POST" },
                  { "op": "replace", "path": "/PrefCommStmt", "value": "EMAIL,POST" }
                ]
    CustomerPersonalDetailsBody:
      description: An object containing the customer personal details
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CustomerPersonalDetails"
# -------------------------------------------------------- #
    SalesPaymentRestrictedBody:
      description: An object containing a sales payment
      required: true
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesPaymentRestricted"
# -------------------------------------------------------- #   
    OrderPatchBody:
      description: An object containing customer update details
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/PatchDocument"
          examples:
            default:
              summary: Example 1
              value: |
                [
                  { "op": "replace", "path": "/AddressLine1", "value": "Line 1" },
                  { "op": "replace", "path": "/AddressLine2", "value": "Line 2" },
                  { "op": "replace", "path": "/AddressLine3", "value": "Line 3" },
                  { "op": "replace", "path": "/AddressLine4", "value": "Line 4" },
                  { "op": "replace", "path": "/AddressPostcode", "value": "M5 3EJ" },
                  { "op": "replace", "path": "/DeliveryInstructions", "value": "New Instructions" },
                  { "op": "replace", "path": "/SpecialDeliveryInstructionsLine1", "value": "Line 1" },
                  { "op": "replace", "path": "/SpecialDeliveryInstructionsLine2", "value": "Line 2" },
                  { "op": "replace", "path": "/SpecialDeliveryInstructionsLine3", "value": "Line 3" },
                  { "op": "replace", "path": "/SpecialDeliveryInstructionsLine4", "value": "Line 4" },
                  { "op": "replace", "path": "/CustomerOrderNumber", "value": "1234" },
                  { "op": "replace", "path": "/MaximumVehicleType", "value": "0" },
                  { "op": "replace", "path": "/IntendedDeliveryDate", "value": "2021-04-08" },
                  { "op": "replace", "path": "/LatestDeliveryDate", "value": "2021-04-12" },
                  { "op": "replace", "path": "/OrderDepot", "value": "100" }
                ]
            addreplace:
              summary: Example 2
              value: |
                [
                  { "op": "replace", "path": "/OrderLine/0", "value": { "Quantity": "1000" },
                  { "op": "add", "path": "/DayTimeWindow/0", "value": { "Day": "Monday", "TimeWindow": [{ "From": "9:00", "To": "12:00" }] }},
                ]
            remove:
              summary: Example 3
              value: |
                [
                  { "op": "remove", "path": "/DayTimeWindow/0" }
                ]
