openapi: 3.0.0
info:
  version: "2.11" # 29/10/2019
  title: 'Codas Public  - Condensed'
  description: 'An API that provides Public/Third Party access to customer specific information such as pricing and transactional data for registered Codas Online customers. Provides access to reference data and ability to update customer details and create new sales orders. This API requires a valid CDS CODAS license.  
<br><br> Version 2.0 - 05/08/2019  - Addition of purchase order entity
<br>Version 2.1 - 12/08/2019  - Restructured endpoints, requests and responses
<br>Version 2.2 - 23/08/2019  - Removed Prefixes and changed the naming convention of scopes
<br>Version 2.3 - 06/09/2019  - Changed underscores to hypens in endpoints and changed parameter names to camel case
<br>Version 2.4 - 11/09/2019  - Restructured endpoints
<br>Version 2.5 - 18/09/2019  - Restructured sales order endpoint and contacts endpoint
<br>Version 2.6 - 04/10/2019  - Added the sandbox server address (https://sandbox.dev.codas.com/api/v1)
<br>Version 2.7 - 08/10/2019  - Added ability to request a sales order by ticket number
<br>Version 2.8 - 09/10/2019  - Restructured the contact object to contain Marketing Preferences list instead of defined properties
<br>Version 2.9 - 21/10/2019  - Adapted "Next" property references to provide example uri
<br>Version 2.10 - 28/10/2019 - Added TelNo2 property to the contact schema
<br>Version 2.11 - 29/10/2019 - Added extra properties to the sales-order schema'
  termsOfService: https://www.codas.com/privacy-policy
  contact:
    name: Support
    url: https://support.codas.co.uk
    email: support@cds-systems.co.uk
  license:
    name: CDS Computer Design Systems Ltd.
    url: https://www.codas.com
# -------------------------------------------------------- # 
# API SERVERS
# -------------------------------------------------------- # 
servers: 
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/codas7/CODAS7_PublicAPI/1
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/codas7/Codas7a/1
- url: https://sandbox.dev.codas.com/api/v1
  description: Sandbox API Server
# -------------------------------------------------------- #   
# RESOURCE ENDPOINTS
# -------------------------------------------------------- #    
paths:
# -------------------------------------------------------- #   
# SALES ORDER ENDPOINTS
# -------------------------------------------------------- #     
  /sales-orders/:
    get:
      tags:
        - SalesOrders
      operationId: GetCustomerOrders
      parameters:
        - name: accountNo
          in: query
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: after
          in: query
          required: false
          description: Returns orders sequentially after this UID
          example: '0000001720'
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: Set maximum number of orders returned
          example: '10'
          schema:
            type: number
      description: Get a customer's orders
      responses:
        "200":
          $ref: "#/components/responses/SalesOrders"
        "400":
          description: Bad Request
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "501":
          description: Not Implemented
      security:
        - OAuth2:
            - read:sales_order
  # -------------------------------------------------------- #    
  /sales-orders/{uid}:
    get:
      tags:
        - SalesOrders
      operationId: GetSpecificOrders
      parameters:
        - name: uid
          in: path
          required: true
          description: Unique Order ID or Ticket Number
          example: '0000001507'
          schema:
            type: string
            maxLength: 20
        - name: accountNo
          in: query
          required: false
          description: Customer Account Number, only required if uid is a Ticket Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
      description: Get Order
      responses:
        "200":
          $ref: "#/components/responses/SalesOrder"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:sales_order
# -------------------------------------------------------- #   
# CONTACT ENDPOINTS
# -------------------------------------------------------- #     
  /customers/{accountNo}/contacts/:
    get:
      tags:
        - Contacts
      operationId: GetAllContacts
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: limit
          in: query
          description: Limit number of records returned
          example: 10
          schema:
            type: number
        - name: after
          in: query
          description: UID to start after for next batch
          example: '00000'
          schema:
            type: string
            minLength: 5
            maxLength: 5
      description: Get Codas Online customer contacts
      responses:
        "200":
          $ref: "#/components/responses/Contacts"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:contact
  # ------------------------------------------------------ #    
  /customers/{accountNo}/contacts/{uid}:
    get:
      tags:
        - Contacts
      operationId: GetSpecificContacts
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: uid
          in: path
          required: true
          description: Contact Unique ID (within Customer)
          example: '00000'
          schema:
            type: string
            minLength: 5
            maxLength: 5
      description: Get the Codas Online customer contact
      responses:
        "200":
          $ref: "#/components/responses/Contact"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:contact
# -------------------------------------------------------- #   
# SCHEMAS
# -------------------------------------------------------- #    
components:
  schemas:
    SalesOrder:
      title: Sales Order
      type: object
      properties:   
        UID:
          type: string
          description: UID - Unique Order ID (ignored in Post)
          example: '0000001507'
          maxLength: 10
        TicketNo:
          type: string
          description: Ticket number (ignored in Post)
          example: 'T0056443'
          maxLength: 20
        CustomerAccountNo:
          type: string
          description: Customer Account Number
          example: '1234567'
          minLength: 7
          maxLength: 7
        InvoiceNo: 
          type: string
          description: Invoice Number (ignored in Post)
          example: 'T123456'
          maxLength: 20
        OrderDate:
          type: string
          description: Order date (YYYY-MM-DD)
          example: '2019-07-22'
          maxLength: 10
        OrderDepot:
          type: string
          description: Order depot
          example: '100'
          maxLength: 3
        AddressPostcode:
          type: string
          description: Delivery address postcode
          example: 'M5 4TP'
          maxLength: 10
        TotValIncVAT:
          type: number
          description: Order total value including VAT
          example: 23490
        Status:
          type: integer
          description: Status (ignored in Post)
          example: 10
        StatusDescription:
          type: string
          description: Status Description (ignored in Post)
          example: 'Confirmed'
        WindowsLoad:
          type: string
          description: Load row id. Empty string unless the order is on a load
          example: '0000001234'
          maxLength: 10
        OrderLines:  
          type: array
          description: Array of order lines
          items:
            $ref: '#/components/schemas/SalesOrderLine'          
        DeliveryLines:  
          type: array
          description: Array of delivery lines (only applicable when the status is greater than 9)
          items:
            $ref: '#/components/schemas/SalesOrderLine'
# -------------------------------------------------------- #    
    SalesOrderLine:
      title: Sales Order Line
      type: object
      properties: 
        Line:
          type: integer
          description: Line - Unique within Order
          example: 1
          maxLength: 5
        ProductCode:
          type: string
          description: Product code
          example: '001'
          maxLength: 10
        Quantity:
          type: number
          description: Quantity
          example: 1000
          maxLength: 8
        EnteredUnit:
          type: string
          description: Unit of Measure 'E' = Each,'K' = Kgs,'L' = Ambient Litres,'L15' = Litres 15,'T' = Tonnes
          example: 'L'
          maxLength: 3
        VATAmount:
          type: number
          description: VAT amount
          example: 3915
        Val:
          type: number
          description: Value
          example: 19575
# -------------------------------------------------------- #    
    SalesOrders:
        title: Sales Order List
        type: object
        properties:
          Items:
            type: array
            items:
              $ref: "#/components/schemas/SalesOrder"
          Next:
            $ref: "#/components/schemas/Next"
            description: Link to next batch of sales orders
# -------------------------------------------------------- # 
    Next:
      title: Next
      type: string
      format: uri
      example: "/api/v1/some-endpoint/?param1=1234567&after=00000&limit=10"
# -------------------------------------------------------- #    
    MarketingPreference:
      title: MarketingPreference
      type: object
      properties:
        UID:
          type: number
          description: Unique ID
        Type:
          type: string
          maxLength: 15
          example: "EMAIL"
        Preference:
          type: string
          minLength: 1
          maxLength: 1
          enum:
            - A
            - D
            - S
            - U
          example: "A"
        Reason:
          type: string
          maxLength: 10
        CreatedOn:
          type: string
          anyOf: 
            - type: string
              format: date-time
            - type: string
              maxLength: 0
          readOnly: true
          example: "2019-10-09T17:07:30"
        TelesalesPref:
          type: string
          minLength: 0
          maxLength: 1
          enum:
            - A
            - D
            - S
            - U
            - 
 # -------------------------------------------------------- #
    Contact:
      title: Contact
      type: object
      properties:
        AccountNo:
          type: string
          description: Customer Account Number
          minLength: 7
          maxLength: 7
          example: '0001234'          
        UID:
          type: string
          description: Contact Unique ID (within Customer)
          minLength: 5
          maxLength: 5
          example: '00000'
        FullName:
          type: string
          description: Associate Full Name
          example: 'Mr Joe T Bloggs'
          maxLength: 80
        Title:
          type: string
          description: Associate Title
          example: 'Mr'
          maxLength: 10
        Forename:
          type: string
          description: Associate Forename
          example: 'Joe'
          maxLength: 20          
        Initials:
          type: string
          description: Associate Initials
          example: 'T'
          maxLength: 10
        Surname:
          type: string
          description: Associate Surname
          example: 'Bloggs'
          maxLength: 30 
        AddressToUse:
          type: string
          description: Which customer address to use for associate - (N)ormal, (I)nvoice or (S)pecified
          example: 'N'
          maxLength: 1
        SpecAddress1:
          type: string
          description: Associate Specified Address Line 1
          example: 'The Mill'
          maxLength: 30
        SpecAddress2:
          type: string
          description: Associate Specified Address Line 2
          example: 'South Hall Street'
          maxLength: 30
        SpecAddress3:
          type: string
          description: Associate Specified Address Line 3
          example: 'Salford'
          maxLength: 30
        SpecAddress4:
          type: string
          description: Associate Specified Address Line 4
          example: 'Lancashire'
          maxLength: 30
        SpecPostCode:
          type: string
          description: Associate Specified Address Postcode
          example: 'M5 4TP'
          maxLength: 30
        SpecCountry:
          type: string
          description: Associate Specified Address Country
          example: 'UK'
          maxLength: 3  
        MarketingPreferences:
          type: array
          items:
            $ref: "#/components/schemas/MarketingPreference"
        EMail:
          type: string
          description: Associate Email Address
          format: email
          maxLength: 60
          example: 'customer@domain.com'
        TelNo: 
          type: string
          description: Associate Telephone Number
          maxLength: 20
          example: '01618329251'
        TelNo2: 
          type: string
          description: Second Associate Telephone Number
          maxLength: 20
          example: '01618329251'
        MobileNo:
          type: string
          description: Associate Mobile Number
          minLength: 40
          example: '07775743400'
        OnlineSvcUserName:
          type: string
          description: Online Login User Name
          maxLength: 60
          example: 'customer@domain.com'
        OnlineSvcActive:
          type: string
          description: Online Login Active ([Y]es / [N]o / [P]ending delete)
          minLength: 1
          maxLength: 1
          example: 'Y'
# -------------------------------------------------------- #    
    Contacts:
        title: Contacts List
        type: object
        properties:
          Items:
            type: array
            items:
              $ref: "#/components/schemas/Contact"
          Next:
            $ref: "#/components/schemas/Next"
            description: Link to next batch of contacts
# -------------------------------------------------------- #    
# RESPONSES
# -------------------------------------------------------- #    
  responses:
    UnauthorisedError:
      description: Access token is missing or invalid
    UnprocessableError:
      description: Unprocessable Entity
# -------------------------------------------------------- # 
    StdResponse:
      description: Success
      headers:
            Location:
              schema:
                type: string
                format: uri
                example: /artifacts/10
# -------------------------------------------------------- #        
    SalesOrder:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesOrder"
# -------------------------------------------------------- #        
    SalesOrders:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesOrders"
 # -------------------------------------------------------- #   
    LastOrder:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesOrder"
# -------------------------------------------------------- #    
    Contact:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Contact"
# -------------------------------------------------------- #    
    Contacts:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Contacts"
# -------------------------------------------------------- # 
# SECURITY
# -------------------------------------------------------- #    
  securitySchemes:
    OAuth2:           
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://identity.example.com/connect/authorize
          tokenUrl: https://identity.example.com/connect/token
          scopes:
            codasapi.sales_order.read: Grants read access to sales orders, only their own by default
            #------#
            codasapi.contact.read: Grants read access to customer further contacts, only their own by default
        clientCredentials:
          tokenUrl: https://identity.example.com/connect/token
          scopes:
            codasapi.sales_order.read: Grants read access to sales orders, only their own by default
            #------#
            codasapi.contact.read: Grants read access to customer further contacts, only their own by default
# -------------------------------------------------------- #    
# REQUEST BODIES
# -------------------------------------------------------- #    
  requestBodies:  
    ContactBody:
      description: An object containing Contact update details 
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/Contact"
          examples:
            default:
              summary: Example 1
              value: |
                {
                  "Name": {
                    "casTitle": "Mr",
                    "casForename": "Joe",
                    "casInitials": "T",
                    "casSurname": "Bloggs"
                  },
                  "Address": {
                    "casAddress4": "Lancashire",
                  },
                  "Marketing": {
                    "casGDPRMailUs": "D",
                  },
                  "casEMail": "joe@bloggs.com",
                  "casMobileNo": "07775123456",
                  }
                }
# -------------------------------------------------------- #   
    SalesOrderBody:
      description: Success
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/SalesOrder"