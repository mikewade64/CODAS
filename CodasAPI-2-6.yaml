openapi: 3.0.0
info:
  version: "2.5" # 18/09/2019
  title: 'Codas Public API'
  description: 'An API that provides Public/Third Party access to customer specific information such as pricing and transactional data for registered Codas Online customers. Provides access to reference data and ability to update customer details and create new sales orders. This API requires a valid CDS CODAS license.  
<br><br> Version 2.0 - 05/08/2019  - Addition of purchase order entity
<br>Version 2.1 - 12/08/2019  - Restructured endpoints, requests and responses
<br>Version 2.2 - 23/08/2019  - Removed Prefixes and changed the naming convention of scopes
<br>Version 2.3 - 06/09/2019  - Changed underscores to hypens in endpoints and changed parameter names to camel case
<br>Version 2.4 - 11/09/2019  - Restructured endpoints
<br>Version 2.5 - 18/09/2019  - Restructured sales order endpoint and contacts endpoint
<br>Version 2.6 - 04/10/2019  - Added the sandbox server address (https://sandbox.dev.codas.com/api/v1)'
  termsOfService: https://www.codas.com/privacy-policy
  contact:
    name: Support
    url: https://support.codas.co.uk
    email: support@cds-systems.co.uk
  license:
    name: CDS Computer Design Systems Ltd.
    url: https://www.codas.com
# -------------------------------------------------------- # 
# API SERVERS
# -------------------------------------------------------- # 
servers: 
# Added by API Auto Mocking Plugin
# Added by API Auto Mocking Plugin
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/codas7/CODAS7_PublicAPI/1
- description: SwaggerHub API Auto Mocking
  url: https://virtserver.swaggerhub.com/codas7/Codas7a/1
- url: https://sandbox.dev.codas.com/api/v1
  description: Sandbox API Server
# -------------------------------------------------------- #   
# RESOURCE ENDPOINTS
# -------------------------------------------------------- #    
paths:
# -------------------------------------------------------- #   
# CUSTOMER ENDPOINTS
# -------------------------------------------------------- #    
  /customers/:
    get:
      tags:
        - Customers
      operationId: GetCustomers
      description: Get all Codas Online customers that you have access to
      responses:
        "200":
          $ref: "#/components/responses/Customers"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
      security:
        - OAuth2:
            - read:customer
  # ------------------------------------------------------ #    
  /customers/{accountNo}:
    get:
      tags:
        - Customers
      operationId: GetCustomerById
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
      description: Get specific Codas Online customer
      responses:
        "200":
          $ref: "#/components/responses/Customer"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:customer
  # ------------------------------------------------------ #          
    patch:
      tags:
        - Customers
      operationId: UpdateCustomerById
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
      description: Update specific Codas Online customer
      requestBody:
        $ref: "#/components/requestBodies/CustomerRestrictedBody" 
      responses:
        "200":
          $ref: "#/components/responses/Customer"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - update:customer
# -------------------------------------------------------- #   
# SALES ORDER ENDPOINTS
# -------------------------------------------------------- #     
  /sales-orders/:
    get:
      tags:
        - SalesOrders
      operationId: GetCustomerLastOrder
      parameters:
        - name: accountNo
          in: query
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: lastOrder
          in: query
          required: false
          description: Last Order Only flag
          example: true
          schema:
            type: boolean
      description: Get a customer's orders
      responses:
        "200":
          $ref: "#/components/responses/SalesOrders"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "501":
          description: Not Implemented
      security:
        - OAuth2:
            - read:sales_order
    post:
      tags:
        - SalesOrders
      operationId: PostSalesOrders
      description: Create a Sales Order
      requestBody:
        $ref: "#/components/requestBodies/SalesOrderBody"
      responses:
        "201":
          $ref: "#/components/responses/StdResponse"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
      security:
        - OAuth2:
            - read:sales_order
  # -------------------------------------------------------- #    
  /sales-orders/{uid}:
    get:
      tags:
        - SalesOrders
      operationId: GetSpecificOrders
      parameters:
        - name: uid
          in: path
          required: true
          description: Unique Order ID
          example: '0000001507'
          schema:
            type: string
            maxLength: 20
      description: Get Order
      responses:
        "200":
          $ref: "#/components/responses/SalesOrder"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:sales_order
# -------------------------------------------------------- #   
# PRODUCT TERMS ENDPOINTS
# -------------------------------------------------------- #     
  /customers/{accountNo}/product-terms/:
    get:
      tags:
        - ProductTerms
      operationId: GetCustomerProdTerms
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
      description: Get the Customer Product Terms
      responses:
        "200":
          $ref: "#/components/responses/ProductTerms"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:product_terms
  # ------------------------------------------------------ #    
  /customers/{accountNo}/product-terms/{product}:
    get:
      tags:
        - ProductTerms
      operationId: GetCustomerProdTerm
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: product
          in: path
          required: true
          description: Product Code
          example: '123'
          schema:
            type: string
            minLength: 1
            maxLength: 10
      description: Get a Customer Product Term
      responses:
        "200":
          $ref: "#/components/responses/ProductTerm"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:product_terms
# -------------------------------------------------------- #   
# OPEN ITEMS ENDPOINTS
# -------------------------------------------------------- #    
  /sales-open-items/:
    get:
      tags:
        - OpenItems
      operationId: GetOpenItems
      parameters:
        - name: accountNo
          in: query
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
      description: Get Open Items
      responses:
        "200":
          $ref: "#/components/responses/OpenItems"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:open_items
  # ------------------------------------------------------ #
  /sales-open-items/{accountNo}:
    get:
      tags:
        - OpenItems
      operationId: GetCustomerOpenItems
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
      description: Get the Customer Open Items
      responses:
        "200":
          $ref: "#/components/responses/OpenItems"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:open_items
  # ------------------------------------------------------ #         
  /sales-open-items/{accountNo}/{transactionReference}:
    get:
      tags:
        - OpenItems
      operationId: GetOpenItem
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: transactionReference
          in: path
          required: true
          description: Transaction Reference
          example: 'P12345789'
          schema:
            type: string
      description: Get a specific Customer Open Item
      responses:
        "200":
          $ref: "#/components/responses/OpenItem"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:open_items
# -------------------------------------------------------- #   
# CONTACT ENDPOINTS
# -------------------------------------------------------- #     
  /customers/{accountNo}/contacts/:
    get:
      tags:
        - Contacts
      operationId: GetAllContacts
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: limit
          in: query
          description: Limit number of records returned
          example: 10
          schema:
            type: number
        - name: after
          in: query
          description: UID to start after for next batch
          example: '00000'
          schema:
            type: string
            minLength: 5
            maxLength: 5
      description: Get Codas Online customer contacts
      responses:
        "200":
          $ref: "#/components/responses/Contacts"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:contacts
  # ------------------------------------------------------ #            
    post:
      tags:
        - Contacts
      operationId: PutContact
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7

      description: Change the contact details of the contact
      requestBody:
        $ref: "#/components/requestBodies/ContactBody" 
      responses:
        "201":
           $ref: "#/components/responses/StdResponse"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "422":
          $ref: "#/components/responses/UnprocessableError"
      security:
        - OAuth2:
            - create:contacts
  # ------------------------------------------------------ #    
  /customers/{accountNo}/contacts/{uid}:
    get:
      tags:
        - Contacts
      operationId: GetSpecificContacts
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: uid
          in: path
          required: true
          description: Contact Unique ID (within Customer)
          example: '00000'
          schema:
            type: string
            minLength: 5
            maxLength: 5
      description: Get the Codas Online customer contact
      responses:
        "200":
          $ref: "#/components/responses/Contact"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:contacts
  # ------------------------------------------------------ #            
    patch:
      tags:
        - Contacts
      operationId: UdateContact
      parameters:
        - name: accountNo
          in: path
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: uid
          in: path
          required: true
          description: Contact Unique ID (within Customer)
          example: '00000'
          schema:
            type: string
            minLength: 5
            maxLength: 5
      description: Change the contact details of the contact
      requestBody:
        $ref: "#/components/requestBodies/ContactBody" 
      responses:
        "202":
          $ref: "#/components/responses/StdResponse"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
        "422":
          $ref: "#/components/responses/UnprocessableError"
      security:
        - OAuth2:
            - update:contacts
# -------------------------------------------------------- #   
# PURCHASE ORDER ENDPOINTS
# -------------------------------------------------------- #   
  /purchase-orders:
    get:
      tags:
        - PurchaseOrders
      operationId: GetAllPurchaseOrders
      description: Get all Purchase Orders within current users scope. For a 3rd party API Key this may only be orders created using the key
      responses:
        "200":
          $ref: "#/components/responses/PurchaseOrder"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
      security:
        - OAuth2: []
    post:
      tags:
        - PurchaseOrders
      operationId: PutPurchaseOrders
      description: Put a Purchase Order
      requestBody:
        $ref: "#/components/requestBodies/PurchaseOrderBody" 
      responses:
        "201":
          $ref: "#/components/responses/StdResponse"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
      security:
        - OAuth2:
            - create:purchase_order
  # -------------------------------------------------------- #    
  /purchase-orders/{uid}:
    get:
      tags:
        - PurchaseOrders
      operationId: GetSpecificPurchaseOrders
      description: Get specific Purchase Orders within current users scope. For a 3rd party API Key this will only return orders created using the key
      parameters:
        - name: uid
          in: path
          required: true
          description: Unique Order ID
          example: '0000001507'
          schema:
            type: string
            maxLength: 20
      responses:
        "200":
          $ref: "#/components/responses/PurchaseOrder"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:purchase_order
# -------------------------------------------------------- #   
# PRODUCT ENDPOINTS
# -------------------------------------------------------- #    
  /products:
    get:
      tags:
        - Products
      operationId: GetAllProducts
      description: Get All Products
      responses:
        "200":
          $ref: "#/components/responses/Products"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:products
  # ------------------------------------------------------ #    
  /products/{code}:
    get:
      tags:
        - Products
      operationId: GetSpecificProduct
      parameters:
        - name: code
          in: path
          required: true
          description: Product Code
          example: '001'
          schema:
            type: string
            maxLength: 10
      description: Get Product
      responses:
        "200":
          $ref: "#/components/responses/Product"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:products
# -------------------------------------------------------- #   
# PRICING ENDPOINTS
# -------------------------------------------------------- #
  /pricing:
    get:
      tags:
        - Pricing
      operationId: Calculateprice
      parameters:
        - name: accountNo
          in: query
          required: true
          description: Customer Account Number
          example: '0001234'
          schema:
            type: string
            minLength: 7
            maxLength: 7
        - name: productCode
          in: query
          required: true
          description: Product Code
          example: '001'
          schema:
            type: string
            maxLength: 10
        - name: pricingDate
          in: query
          required: false
          description: Pricing Date
          example: '2019-08-12'
          schema:
            type: string
            maxLength: 10
        - name: depotCode
          in: query
          required: false
          description: Depot Code
          example: '001'
          schema:
            type: string
            maxLength: 10
        - name: quantity
          in: query
          required: false
          description: Quantity
          example: '500'
          schema:
            type: string
      description: Calculate prices
      responses:
        "200":
          $ref: "#/components/responses/Pricing"
        "401":
          $ref: "#/components/responses/UnauthorisedError"
        "403":
          description: Forbidden
        "404":
          description: Not Found
      security:
        - OAuth2:
            - read:pricing
# -------------------------------------------------------- #   
# SCHEMAS
# -------------------------------------------------------- #    
components:
  schemas:
    User:
      title: User
      type: object
      properties:
        AccountNo:
          type: string
          description: Customer Account Number          
          minLength: 7
          maxLength: 7
          example: '0001234'
        UID:
          type: string
          description: Contact Unique ID (within Customer)
          minLength: 5
          maxLength: 5
          example: '00000'
# -------------------------------------------------------- #    
    Customer:
      title: Customer
      type: object
      properties:
        AccountNo:
          type: string
          description: Customer Account Number
          minLength: 7
          maxLength: 7
          example: '0001234'          
        Name:
          $ref: "#/components/schemas/CustomerName"   
        Address:
          $ref: "#/components/schemas/CustomerAddress"
        InvoiceAddress:
          $ref: "#/components/schemas/InvoiceAddress"
        Account:
          $ref: "#/components/schemas/Account"
        EMail:
          type: string
          description: Email Address
          format: email
          maxLength: 60
          example: 'customer@domain.com'
        TelNo: 
          type: string
          description: Telephone Number
          maxLength: 18
          example: '01618329251'
        MobileNo:
          type: string
          description: Mobile Telephone Number
          minLength: 20
          example: '07775743400'
# -------------------------------------------------------- #    
    Customers:
        title: Customer List
        type: object
        properties:
          next:
            type: string
            format: uri
            description: Link to next batch of customers
          items:
            type: array
            items:
              $ref: "#/components/schemas/Customer"
# -------------------------------------------------------- #    
    CustomerRestricted:
      title: CustomerRestricted
      type: object
      properties:
        AccountNo:
          type: string
          description: Customer Account Number
          minLength: 7
          maxLength: 7
          example: '0001234'          
        EMail:
          type: string
          description: Email Address
          format: email
          maxLength: 60
          example: 'customer@domain.com'
        TelNo: 
          type: string
          description: Telephone Number
          maxLength: 18
          example: '01618329251'
        MobileNo:
          type: string
          description: Mobile Telephone Number
          minLength: 20
          example: '07775743400'
# -------------------------------------------------------- #    
    CustomerName:
      title: Customer Name
      type: object
      properties:
        Name:
          type: string
          description: Account Name
          example: 'Salford High School'
          maxLength: 40
        Title:
          type: string
          description: Title
          example: 'Mr'
          maxLength: 8
        Forename:
          type: string
          description: Forename
          example: 'Joe'
          maxLength: 40          
        Surname:
          type: string
          description: Associate Surname
          example: 'Bloggs'
          maxLength: 40
 # -------------------------------------------------------- #   
    CustomerAddress:
      title: Customer Address
      type: object
      properties:
        Address1:
          type: string
          description: Address Line 1
          example: 'The Mill'
          maxLength: 50
        Address2:
          type: string
          description: Address Line 2
          example: 'South Hall Street'
          maxLength: 50
        Address3:
          type: string
          description: Address Line 3
          example: 'Salford'
          maxLength: 50
        Address4:
          type: string
          description: Address Line 4
          example: 'Lancashire'
          maxLength: 50
        PostCode:
          type: string
          description: Post Code
          example: 'M5 4TP'
          maxLength: 9
        Country:
          type: string
          description: Country
          example: 'UK'
          maxLength: 3
# -------------------------------------------------------- #    
    InvoiceAddress:
      title: Invoice Address
      type: object
      properties:
        InvoiceTo1:
          type: string
          description: Invoice To Line 1
          example: 'The Mill'
          maxLength: 50
        InvoiceTo2:
          type: string
          description: Invoice To Line 2
          example: 'South Hall Street'
          maxLength: 50
        InvoiceTo3:
          type: string
          description: Invoice To Line 3
          example: 'Salford'
          maxLength: 50
        InvoiceTo4:
          type: string
          description: Invoice To Line 4
          example: 'Lancashire'
          maxLength: 50
        InvoiceTo5:
          type: string
          description: Invoice To Line 5
          example: 'M5 4TP'
          maxLength: 50
# -------------------------------------------------------- #    
    Account:
      title: Account Details
      type: object
      properties:
        AccountType:
          type: string
          description: Account Type - '0' = Normal Credit (on-account). '4' = Standing Order (customer pays by bank transfer/ internet banking, so effectively on-account).'5'  = Direct Debit.'8' = Load-over-load (previous payment becomes due on delivery of the next - Rarely used and effectively on-account) '9' = COD, so a card payment would always be required
          example: '0'
          maxLength: 1
        OSDebtBalance:
          type: number
          description: Total outstanding balance (in pence/cents)
          example: 42368
          maxLength: 12
        DirDebMode:
          type: string
          description: Direct Debit Mode - 'FFDD' = Fixed Amount Fixed Date, 'VFDD' = Variable Amount Fixed Date,'VVDD' = Variable Amount Variable Date,'LLDD' = Load Over Load
          example: 'FFDD'
          maxLength: 4
        DebitDay:
          type: integer
          description: Debit Day (1-31). This represents the day of the month the customer usually pays
          example: 12
          maxLength: 2
        DebitAmount:
          type: number
          description: Debit Amount - in pence/cents. This represents the amount the customer usually pays each month.
          example: 5000
          maxLength: 30
        TotalExposure:
          type: number
          description: Total exposure - in pence/cents
          example: 5000
          maxLength: 15
        LastPaymentDate:
          type: string
          description: Last payment date (YYYY-MM-DD)
          example: '2019-06-01'
          maxLength: 10
        LastPaymentType:
          type: string
          description: Last payment type used (updated when payment posted)
          example: 'DD'
          maxLength: 5          
        LastPaymentValue:
          type: number
          description: Last payment value in pence/cents.
          example: 50000
          maxLength: 10 
# -------------------------------------------------------- #    
    SalesOrder:
      title: Sales Order
      type: object
      properties:   
        UID:
          type: string
          description: UID - Unique Order ID (ignored in Post)
          example: '0000001507'
          maxLength: 20
        CustomerAccountNo:
          type: string
          description: Customer Account Number
          example: '1234567'
          minLength: 7
          maxLength: 7
        InvoiceNo: 
          type: string
          description: Invoice Number (ignored in Post)
          example: 'T123456'
          maxLength: 20
        OrderDate:
          type: string
          description: Order date (YYYY-MM-DD)
          example: '2019-07-22'
          maxLength: 10
        TotValIncVAT:
          type: number
          description: Order total value including VAT
          example: 23490
        Status:
          type: integer
          description: Status (ignored in Post)
          example: 10
        StatusDescription:
          type: string
          description: Status Description (ignored in Post)
          example: 'Confirmed'
        OrderLines:  
          type: array
          description: Array of order lines
          items:
            $ref: '#/components/schemas/SalesOrderLine'          
        DeliveryLines:  
          type: array
          description: Array of delivery lines (only applicable when the status is greater than 9)
          items:
            $ref: '#/components/schemas/SalesOrderLine'
# -------------------------------------------------------- #    
    SalesOrderLine:
      title: Sales Order Line
      type: object
      properties: 
        Line:
          type: integer
          description: Line - Unique within Order
          example: 1
          maxLength: 5
        ProductCode:
          type: string
          description: Product code
          example: '001'
          maxLength: 10
        Quantity:
          type: number
          description: Quantity
          example: 1000
          maxLength: 8
        EnteredUnit:
          type: string
          description: Unit of Measure 'E' = Each,'K' = Kgs,'L' = Ambient Litres,'L15' = Litres 15,'T' = Tonnes
          example: 'L'
          maxLength: 3
        VATAmount:
          type: number
          description: VAT amount
          example: 3915
        Val:
          type: number
          description: Value
          example: 19575
# -------------------------------------------------------- #    
    SalesOrders:
        title: Sales Order List
        type: object
        properties:
          Items:
            type: array
            items:
              $ref: "#/components/schemas/SalesOrder"
          Next:
            type: string
            format: uri
            description: Link to next batch of sales orders
# -------------------------------------------------------- #
    PurchaseOrder:
      title: Purchase Order
      type: object
      properties:   
        UID:
          type: string
          description: UID - Unique purchase order ID (ignored in Post)
          example: '0000001507'
          maxLength: 10
        SupplierRef: 
          type: string
          description: Supplier reference (account number)
          example: 'T12345'
          maxLength: 6
        OrderDate:
          type: string
          description: Order date (YYYY-MM-DD)
          example: '2019-07-22'
          maxLength: 10
        DelAddr1:
          type: string
          description: Delivery address line 1
          example: 'The Range'
          maxLength: 40
        DelAddr2:
          type: string
          description: Delivery address line 2
          example: 'The Road'
          maxLength: 40
        DelAddr3:
          type: string
          description: Delivery address line 3
          example: 'The Town'
          maxLength: 40
        DelAddr4:
          type: string
          description: Delivery address line 4
          example: 'The County'
          maxLength: 40
        DelAddr5:
          type: string
          description: Delivery address line 5
          example: 'The Postcode'
          maxLength: 40
        Depot:
          type: string
          description: Ordering depot
          example: '001'
          maxLength: 3
        Net:
          type: string
          description: Order nett value
          example: '375300.00'
          maxLength: 12
        VAT:
          type: string
          description: Order VAT value
          example: '75060.00'
          maxLength: 12
        Gross:
          type: string
          description: Order gross value
          example: '450360.00'
          maxLength: 12
        StatusDescription:
          type: string
          description: Status Description (ignored in Post)
          example: 'Confirmed'
        OrderLines:  
          type: array
          items:
            $ref: '#/components/schemas/PurchaseOrderLine'          
# -------------------------------------------------------- #    
    PurchaseOrderLine:
      title: Purchase Order Line
      type: object
      properties: 
        Line:
          type: integer
          description: Line/Sequence - Unique within purchase order
          example: 1
          maxLength: 5
        ProductCode:
          type: string
          description: Product code
          example: 'KERO'
          maxLength: 10
        Desc:
          type: string
          description: Line description
          example: 'Kerosene'
          maxLength: 50
        LineQuantity:
          type: number
          description: Line quantity
          example: 1000000
          maxLength: 8
        VATCode:
          type: string
          description: Line VAT code
          example: 'STD'
          maxLength: 10
        VATRate:
          type: string
          description: Line VAT rate
          example: '20.00'
          maxLength: 10
        Price:
          type: string
          description: Line price per unit
          example: '0.3753'
          maxLength: 10
        LineNet:
          type: string
          description: Line nett value
          example: '375300.00'
          maxLength: 12
        LineVAT:
          type: string
          description: Line VAT value
          example: '75060.00'
          maxLength: 12
        LineGross:
          type: string
          description: Line gross value
          example: '450360.00'
          maxLength: 12
# -------------------------------------------------------- #    
    PurchaseOrders:
        title: Purchase Order List
        type: object
        properties:
          next:
            type: string
            format: uri
            description: Link to next batch of purchase orders
          items:
            type: array
            items:
              $ref: "#/components/schemas/PurchaseOrder"
# -------------------------------------------------------- #    
    Product:
      title: Product
      type: object
      properties: 
        Code:
          type: string
          description: Product code
          example: '001'
          maxLength: 10
        Name:
          type: string
          description: Full name
          example: 'Oil Pink'
          maxLength: 30
        ShortName:
          type: string
          description: Short name
          example: 'OILP'
          maxLength: 9
        MarketingName:
          type: string
          description: Marketing Product Name
          example: 'Oil Pink +'
          maxLength: 50
        SalesUnit:
          type: string
          description: Sales unit - 'E' = Each,'K' = Kgs,'L' = Ambient Litres,'L15' = Litres 15,'T' = Tonnes
          example: 'L'
          maxLength: 3
        Active:
          type: string
          description: Active Flag 'Y' or '' Yes, 'N' No
          example: 'Y'
          maxLength: 1
# -------------------------------------------------------- #    
    Products:
        title: Product List
        type: object
        properties:
          next:
            type: string
            format: uri
            description: Link to next batch of products
          items:
            type: array
            items:
              $ref: "#/components/schemas/Product"
# -------------------------------------------------------- #        
    ProductTerm:
      title: Product Term
      type: object
      properties: 
        TodayPrice:
          type: number
          description: Unit Price, in the pence/cents (nn.nn)
          example: 12.45
        AccountNo:
          type: string
          description: Customer account number
          example: '0001234'
          minLength: 7
          maxLength: 7
        Product:
          type: string
          description: Product code
          example: '001'
          maxLength: 10
        CreditPeriod:
          type: string
          description: Credit Period
          example: 'S1'
          maxLength: 10
        NextDelivDate:
          type: string
          description: Next Delivery Date (YYYY-MM-DD)
          example: '2019-07-23'
        LastDelivDate:
          type: string
          description: Last Delivery Date (YYYY-MM-DD)
          example: '2019-07-23'
# -------------------------------------------------------- #    
    ProductTerms:
        title: Product terms List
        type: object
        properties:
          next:
            type: string
            format: uri
            description: Link to next batch of product terms
          items:
            type: array
            items:
              $ref: "#/components/schemas/ProductTerm"
# -------------------------------------------------------- #    
    OutTransaction:
      title: Outstanding Transaction
      type: object
      properties: 
        MasterAccountNumber:
          type: string
          description: Master account number
          example: '0001234'
          minLength: 7
          maxLength: 7
        TransactionReference:
          type: string
          description: Transaction Reference (unique within Master Customer Account)
          example: '133260'
        TransactionDate:
          type: string
          description: Transaction Date (YYYY-MM-DD)
          example: '2019-05-14'
          maxLength: 10
        TransType:
          type: string
          description: Transaction Type
          example: 'DSP'
          maxLength: 5
        ProductCode:
          type: string
          description: Product code
          example: '012'
          maxLength: 10
        Quantity:
          type: number
          description: Quantity
          example: 500
        OutstandingValue:
          type: number
          description: Outstanding value - in pence/cents. Credit values will be passed as negative values. Zero valued transactions will not be passed.
          example: 12350
# -------------------------------------------------------- #    
    OutTransactions:
        title: Outstanding Transactions List
        type: object
        properties:
          next:
            type: string
            format: uri
            description: Link to next batch of outstanding transactions
          items:
            type: array
            items:
              $ref: "#/components/schemas/OutTransaction"
 # -------------------------------------------------------- #   
    Contact:
      title: Contact
      type: object
      properties:
        AccountNo:
          type: string
          description: Customer Account Number
          minLength: 7
          maxLength: 7
          example: '0001234'          
        UID:
          type: string
          description: Contact Unique ID (within Customer)
          minLength: 5
          maxLength: 5
          example: '00000'
        FullName:
          type: string
          description: Associate Full Name
          example: 'Mr Joe T Bloggs'
          maxLength: 80
        Title:
          type: string
          description: Associate Title
          example: 'Mr'
          maxLength: 10
        Forename:
          type: string
          description: Associate Forename
          example: 'Joe'
          maxLength: 20          
        Initials:
          type: string
          description: Associate Initials
          example: 'T'
          maxLength: 10
        Surname:
          type: string
          description: Associate Surname
          example: 'Bloggs'
          maxLength: 30 
        AddressToUse:
          type: string
          description: Which customer address to use for associate - (N)ormal, (I)nvoice or (S)pecified
          example: 'N'
          maxLength: 1
        SpecAddress1:
          type: string
          description: Associate Specified Address Line 1
          example: 'The Mill'
          maxLength: 30
        SpecAddress2:
          type: string
          description: Associate Specified Address Line 2
          example: 'South Hall Street'
          maxLength: 30
        SpecAddress3:
          type: string
          description: Associate Specified Address Line 3
          example: 'Salford'
          maxLength: 30
        SpecAddress4:
          type: string
          description: Associate Specified Address Line 4
          example: 'Lancashire'
          maxLength: 30
        SpecPostCode:
          type: string
          description: Associate Specified Address Postcode
          example: 'M5 4TP'
          maxLength: 30
        SpecCountry:
          type: string
          description: Associate Specified Address Country
          example: 'UK'
          maxLength: 3  
        GDPRFurtherUpdates:
          type: string
          example: 'A'
          description: 'GDPR : Customer would like further updates'
          maxLength: 1
        GDPRMailOtherCompanies:
          type: string          
          example: 'D'
          description: 'GDPR : Mail From Other Companies'  
          maxLength: 1
        GDPRMailUs:
          type: string            
          example: 'U'
          description: 'GDPR : Mail From Us'
          maxLength: 1
        GDPRPhoneCall:
          type: string
          example: 'S'
          description: 'GDPR : Telephone call'
          maxLength: 1
        GDPREmailFromUs:
          type: string          
          example: 'A'
          description: 'GDPR : E-mail From Us'
          maxLength: 1
        GDPRTextMessage:
          type: string
          example: 'D'
          description: 'GDPR : Text Message'
          maxLength: 1
        EMail:
          type: string
          description: Associate Email Address
          format: email
          maxLength: 60
          example: 'customer@domain.com'
        TelNo: 
          type: string
          description: Associate Telephone Number
          maxLength: 20
          example: '01618329251'
        MobileNo:
          type: string
          description: Associate Mobile Number
          minLength: 40
          example: '07775743400'
        OnlineSvcUserName:
          type: string
          description: Online Login User Name
          maxLength: 60
          example: 'customer@domain.com'
        OnlineSvcActive:
          type: string
          description: Online Login Active ([Y]es / [N]o / [P]ending delete)
          minLength: 1
          maxLength: 1
          example: 'Y'
# -------------------------------------------------------- #    
    Contacts:
        title: Contacts List
        type: object
        properties:
          Items:
            type: array
            items:
              $ref: "#/components/schemas/Contact"
          Next:
            type: string
            format: uri
            description: Link to next batch of contacts
# -------------------------------------------------------- #    
    Pricing:
      title: Pricing
      type: object
      properties:
        UnitPrice:
          type: number
          description: Calculated Unit Price
        VATRates:
          type: array
          description: VAT Rates applicable
          items:
            $ref: "#/components/schemas/VATRate"
          
# -------------------------------------------------------- #   
    VATRate:
      title: VATRate
      type: object
      properties:
        Rate:
          type: string
          description: VAT Rate
        Quantity:
          type: number
          description: Quantity
# -------------------------------------------------------- #   
# RESPONSES
# -------------------------------------------------------- #    
  responses:
    UnauthorisedError:
      description: Access token is missing or invalid
    UnprocessableError:
      description: Unprocessable Entity
# -------------------------------------------------------- # 
    StdResponse:
      description: Success
      headers:
            Location:
              schema:
                type: string
                format: uri
                example: /artifacts/10
# -------------------------------------------------------- # 
    Customer:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Customer"
# -------------------------------------------------------- # 
    Customers:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Customers"
# -------------------------------------------------------- #    
    CustomerRestricted:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/CustomerRestricted"
# -------------------------------------------------------- #        
    SalesOrder:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesOrder"
# -------------------------------------------------------- #        
    SalesOrders:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesOrders"
 # -------------------------------------------------------- #   
    LastOrder:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SalesOrder"
# -------------------------------------------------------- #        
    PurchaseOrder:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PurchaseOrder"
# -------------------------------------------------------- #        
    PurchaseOrders:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/PurchaseOrders"
# -------------------------------------------------------- #    
    ProductTerm:
      description: Success
      content:
        application/json:
          schema:
              $ref: "#/components/schemas/ProductTerm"
# -------------------------------------------------------- #    
    ProductTerms:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ProductTerms"
# -------------------------------------------------------- #    
    Product:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Product"
# -------------------------------------------------------- #    
    Products:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Products"
# -------------------------------------------------------- #    
    OpenItems:
      description: Success
      content:
        application/json:
          schema:
              $ref: "#/components/schemas/OutTransactions"
# -------------------------------------------------------- #    
    OpenItem:
      description: Success
      content:
        application/json:
          schema:
              $ref: "#/components/schemas/OutTransaction"
# -------------------------------------------------------- #    
    Contact:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Contact"
# -------------------------------------------------------- #    
    Contacts:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Contacts"
# -------------------------------------------------------- #    
    Pricing:
      description: Success
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Pricing"
# -------------------------------------------------------- #    
    User:
      description: Success
      links:
        GetContactByID: 
          description: The 'casAccountNo' and 'UID' values returned in the response can be used as the parameters in 'GET /contacts/{AccountNo}/{UID}'
          operationId: getContacts
          parameters:
            AccountNo: '$response.body#/casAccountNo'
            UID: '$response.body#/UID'
        GetCustomerByID: 
          description: The 'casAccountNo' value returned in the response can be used as the parameter in 'GET /customers/{AccountNo}'
          operationId: getCustomer
          parameters:
            AccountNo: '$response.body#/casAccountNo'
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
# -------------------------------------------------------- # 
# SECURITY
# -------------------------------------------------------- #    
  securitySchemes:
    OAuth2:           
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://identity.example.com/connect/authorize
          tokenUrl: https://identity.example.com/connect/token
          scopes:
            codasapi.customer.read: Grants read access to customers, only their own by default
            codasapi.customer.update: Grants update access to customers, only their own by default
            #------#
            codasapi.sales_order.read: Grants read access to sales orders, only their own by default
            codasapi.sales_order.create: Grants creation access to sales orders, only for their own customer by default
            #------#
            codasapi.product_terms.read: Grants read access to customer product terms, only their own by default
            #------#
            codasapi.open_items.read: Grants read access to customer open items, only their own by default
            #------#
            codasapi.contact.read: Grants read access to customer further contacts, only their own by default
            codasapi.contact.create: Grants creation access to customer further contacts, only for their own customer by default
            codasapi.contact.update: Grants update access to customer further contacts, only their own by default
            #------#
            codasapi.purchase_order.read: Grants read access to purchase orders
            codasapi.purchase_order.create: Grants creation access to purchase orders
            #------#
            codasapi.product.read: Grants read access to products
            #------#
            codasapi.pricing.read: Grants read access to pricing
            #------#
            codasapi.full: Grants full access to the API
        clientCredentials:
          tokenUrl: https://identity.example.com/connect/token
          scopes:
            codasapi.customer.read: Grants read access to customers, only their own by default
            codasapi.customer.update: Grants update access to customers, only their own by default
            #------#
            codasapi.sales_order.read: Grants read access to sales orders, only their own by default
            codasapi.sales_order.create: Grants creation access to sales orders, only for their own customer by default
            #------#
            codasapi.product_terms.read: Grants read access to customer product terms, only their own by default
            #------#
            codasapi.open_items.read: Grants read access to customer open items, only their own by default
            #------#
            codasapi.contact.read: Grants read access to customer further contacts, only their own by default
            codasapi.contact.create: Grants creation access to customer further contacts, only for their own customer by default
            codasapi.contact.update: Grants update access to customer further contacts, only their own by default
            #------#
            codasapi.purchase_order.read: Grants read access to purchase orders
            codasapi.purchase_order.create: Grants creation access to purchase orders
            #------#
            codasapi.product.read: Grants read access to products
            #------#
            codasapi.pricing.read: Grants read access to pricing
            #------#
            codasapi.full: Grants full access to the API
# -------------------------------------------------------- #    
# REQUEST BODIES
# -------------------------------------------------------- #    
  requestBodies:  
    ContactBody:
      description: An object containing Contact update details 
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/Contact"
          examples:
            default:
              summary: Example 1
              value: |
                {
                  "Name": {
                    "casTitle": "Mr",
                    "casForename": "Joe",
                    "casInitials": "T",
                    "casSurname": "Bloggs"
                  },
                  "Address": {
                    "casAddress4": "Lancashire",
                  },
                  "Marketing": {
                    "casGDPRMailUs": "D",
                  },
                  "casEMail": "joe@bloggs.com",
                  "casMobileNo": "07775123456",
                  }
                }
# -------------------------------------------------------- #   
    CustomerRestrictedBody:
      description: Success
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/CustomerRestricted"
# -------------------------------------------------------- #   
    SalesOrderBody:
      description: Success
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/SalesOrder"
# -------------------------------------------------------- #   
    PurchaseOrderBody:
      description: Success
      required: true
      content:
        application/json-patch+json:
          schema:
            $ref: "#/components/schemas/PurchaseOrder"            